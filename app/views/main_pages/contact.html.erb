<% provide(:title, 'Contact Us') %>
<h1>Sample App</h1>
<head>
    <title>MintChip Plugin Test</title>

    <script type="text/javascript">

        var mintChipFactory;
        var messageFactory;
        var mintChip;

        function mintChipApi() {

            return document.getElementById("mintChipApiPlugin");
        }

        function pluginLoaded() {

            alert("Plugin loaded!");

            try {

                mintChipFactory = mintChipApi().mintChipFactory;
                messageFactory = mintChipApi().messageFactory;
                mintChip = mintChipFactory.createMintChip();
            }
            catch (err) {
                displayError(err);
            }
        }

        function createValueMessage() {

            try {

                var payeeId = document.getElementById("payeeId").value;
                var amount = document.getElementById("amount").value;
                var annotation = document.getElementById("annotation").value;

                if (!mintChip.isValidId(payeeId)) {
                    alert("Please enter valid Payee Id.");
                    return;
                }

                if (amount.length == 0 || isNaN(amount)) {
                    alert("Please enter valid amount.");
                    return;
                }

                var request = messageFactory.createValueRequestMessage(payeeId, amount, mintChipApi().currencyCode.CAD);
                request.challenge = Math.round(Math.random() * (Math.pow(2, 31)-1));
                request.annotation = annotation;
                request.responseAddress = "www.mint.ca";

                var str = request.toBase64String(); // to test serialization
                var receivedRequest = messageFactory.toMessage(str);

                if (displayValueRequestMessage(receivedRequest)) {

                    var valueMessage = mintChip.createValueMessage(receivedRequest);
                    displayValueMessage(valueMessage);
                }
            }
            catch (err) {
                displayError(err);
            }
        }

        function loadValueMessage() {

            try {

                var b64ValueMessage = document.getElementById("valueMessage").value;

                if (b64ValueMessage.length == 0) {
                    
                    if (fileApiPresent()) {
                        alert("Please provide a value message by browsing to a value message file.");
                    }
                    else {
                        alert("Please provide a value message by pasting it in the Value Message box.");
                    }

                    return;
                }

                var vm = messageFactory.toMessage(b64ValueMessage);

                if (displayValueMessage(vm, true)) {

                    mintChip.loadValueMessage(vm);
                    alert("Successfully loaded $" + vm.amount / 100 + " !");
                }
            }
            catch (err) {
                displayError(err);
            }
        }


        function readTransactionLog(logType) {

            var LOG_RECORDS_TO_SHOW = 20;

            try {

                var status = mintChip.getStatus();

                // Calculate the start index and the number of entries to read
                var totalCount = 0;
                var caption;
                if (logType == mintChipApi().logType.CREDIT) {
                    totalCount = status.creditLogCount;
                    caption = "Credit Transactions";
                }
                else {
                    totalCount = status.debitLogCount;
                    caption = "Debit Transactions";
                }

                var startIndex = totalCount - LOG_RECORDS_TO_SHOW;
                var numOfEntries = LOG_RECORDS_TO_SHOW;
                if (startIndex < 0) {
                    numOfEntries = LOG_RECORDS_TO_SHOW + startIndex;
                    startIndex = 0;
                }

                // Read the MintChip transaction log
                var entries = mintChip.readTransactionLog(logType, startIndex, numOfEntries);

                // List entries in the reverse order
                entries.reverse();

                displayTransactionLog(entries, caption);
            }
            catch (err) {
                displayError(err);
            }
        }

        function getLastPayment() {

            try {
                var vm = mintChip.getLastCreatedValueMessage("Duplicate");
                displayValueMessage(vm);
            }
            catch (err) {
                displayError(err);
            }
        }

        function getMintChipInfo() {

            try {

                var status = mintChip.getStatus();

                alert("MintChip: \n" +
                    "\n ID: " + mintChip.id +
                    "\n Balance: $" + status.balance / 100 +
                    "\n Currency: " + mintChip.currencyCode +
                    "\n Version: " + mintChip.version +
                    "\n Credit Count: " + status.creditLogCount +
                    "\n Debit Count: " + status.debitLogCount +
                    "\n Remaining Credits: " + status.creditLogCountRemaining +
                    "\n Remaining Debits: " + status.debitLogCountRemaining +
                    "\n Max Credit: $" + status.maxCreditAllowed / 100 +
                    "\n Max Debit: $" + status.maxDebitAllowed / 100
                    );
            }
            catch (err) {
                displayError(err);
            }
        }

        function displayValueMessage(valueMessage, toConfirm) {

            try {

                var created = new Date(valueMessage.createdTime);

                var info = "Value Message:\n" +
                    "\n Amount: " + valueMessage.amount +
                    "\n Annotation: " + valueMessage.annotation +
                    "\n Challenge: " + valueMessage.challenge +
                    "\n Currency Code: " + valueMessage.currencyCode +
                    "\n Payee Id: " + valueMessage.payeeId +
                    "\n Payer Id: " + valueMessage.payerId +
                    "\n Version: " + valueMessage.mintChipVersion +
                    "\n Created: " + created.toString("yyyy-MM-dd") +
                    "\n\n The base64 encoded message is in the Value Message box.";

                document.getElementById("valueMessage").value = valueMessage.toBase64String();

                if (toConfirm) {
                    return confirm(info);
                }
                else {
                    alert(info);
                    return true;
                }
            }
            catch (err) {
                displayError(err);
                return false;
            }
        }

        function displayValueRequestMessage(request) {

            try {

                return confirm("Value Request Message: \n" +
                    "\n Amount: " + request.amount +
                    "\n Annotation: " + request.annotation +
                    "\n Challenge: " + request.challenge +
                    "\n Currency Code: " + request.currencyCode +
                    "\n Payee Id: " + request.payeeId +
                    "\n Response Address: " + request.responseAddress + "\n"
                );
            }
            catch (err) {
                displayError(err);
                return false;
            }
        }

        function displayTransactionLog(entries, caption) {

            var table = document.getElementById("logTable");
            clearTable(table);
            table.createCaption().innerHTML = "<h3>" + caption + "</h3>";

            for (var i = 0; i < entries.length; i++) {

                var entry = entries[i];
                var row = table.insertRow(i+1);  // the first row is thead

                row.insertCell(-1).innerHTML = entry.index;
                row.insertCell(-1).innerHTML = "$" + entry.amount / 100;
                row.insertCell(-1).innerHTML = entry.payeeId;
                row.insertCell(-1).innerHTML = entry.payerId;
                row.insertCell(-1).innerHTML = entry.transactionTime;
                row.insertCell(-1).innerHTML = entry.challenge;
            }
        }

        function clearTable(table) {

            while (table.hasChildNodes()) {
                table.removeChild(table.lastChild);
            }

            var thead = table.createTHead();
            var row = thead.insertRow(0);

            row.insertCell(-1).innerHTML = "Index";
            row.insertCell(-1).innerHTML = "Amount";
            row.insertCell(-1).innerHTML = "Payee";
            row.insertCell(-1).innerHTML = "Payer";
            row.insertCell(-1).innerHTML = "Date";
            row.insertCell(-1).innerHTML = "Challenge";
        }

        function displayError(err) {
            
            if (err.message == undefined) {
                alert(err.toString());
            }
            else {
                alert(err.message);
            }
        }

        function fileApiPresent() {
            return (window.File && window.FileReader) && (navigator.userAgent.toLowerCase().indexOf("chrome") == -1);
        }

        function valueMessageFileSelected(handler) {

            var fileInput = handler.target;
            if (fileInput.files.length > 0) {
                readValueMessageFromFile(fileInput.files[0]);
            }
        }

        function readValueMessageFromFile(file) {

            var reader = new FileReader();
            reader.onloadend = valueMessageFileLoaded;
            return reader.readAsText(file);
        }

        function valueMessageFileLoaded(handler) {
            document.getElementById("valueMessage").value = handler.target.result;
        }


        function initUI() {

            var fileInput = document.getElementById("valueMessageFile");

            if (!fileApiPresent()) {
                fileInput.style.display = "none";
            }
            else {
                fileInput.onchange = valueMessageFileSelected;
            }
        }
    </script>


    <style type="text/css">
        body
        {
            background-color: #f5f5f5;
        }
        
        table
        {
            border-collapse: collapse;
            border: 1px solid #B0B0B0;
        }
               
        td, th
        {
            text-align:left;
            padding: 5px;
            border-bottom: 1px solid #B0B0B0;
	        border-top: 1px solid #B0B0B0;
        }
        
        input
        {
            margin: 5px 0px 5px 0px;
        }

        input[type=button]
        {
            padding: 5px;
            width: 300px;
        }
        
        input[type=text]
        {
            width: 290px;
        }
        
        fieldset
        {
            padding:5px;
            margin: 5px 0px 5px 0px;
            display: inline-block;
        }
    </style>
</head>

<body onload="javascript:initUI()">

    <object id="mintChipApiPlugin" type="application/x-mintchipplugin" width="0" height="0">
        <param name="onload" value="pluginLoaded" />
    </object><br />
    
    <div style="padding-left:20px">
        <h3>MintChip Plugin Test</h3>
    </div>

    <div style="padding:0px 20px 0px  20px; float:left">
        <fieldset>
            <fieldset>
                <input type="button" onclick="javascript:createValueMessage()" value="Create Value Message" /> <br />
                Payee Id:<br /><input type="text" id="payeeId"/> <br />
                Amount (cents):<br /><input type="text" id="amount" value="2"/><br />
                Annotation:<br /><input type="text" id="annotation" value="JavaScript created value message"/>
            </fieldset>
            <br />

            <fieldset>
                <input type="button" onclick="javascript:loadValueMessage()" value="Load Value Message" /> <br />
                <input type="file" id="valueMessageFile" name="valueMessageFile" size="32" />
            </fieldset>
            <br />

            <fieldset>
                <input type="button" onclick="javascript:readTransactionLog(mintChipApi().logType.CREDIT)" value="Read Credits" /> <br />
                <input type="button" onclick="javascript:readTransactionLog(mintChipApi().logType.DEBIT)" value="Read Debits" /> <br />
                <input type="button" onclick="javascript:getLastPayment()" value="Get Last Payment" /> <br />
                <input type="button" onclick="javascript:getMintChipInfo()" value="Get MintChip Info" /> <br />
            </fieldset>
            
            <br />
            <div id="valueMessageArea">
                Value Message:<br /><textarea id="valueMessage" rows="8" cols="36"></textarea>
            </div>
        </fieldset>
    </div>

    <div style="padding-left:20px">
        <table id="logTable">
        </table>
    </div>
</body>
